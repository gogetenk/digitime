@using AutoFixture;
@using Digitime.Shared.Contracts.Timesheets;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web;
@using System.Net.Http.Json

@inject ILogger<SubmittedTimesheet> logger;
@inject HttpClient _http
@attribute [Authorize]

@code {
    public GetTimesheetForUserAndDateResponse Timesheets { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            Timesheets = await _http.GetFromJsonAsync<GetTimesheetForUserAndDateResponse>("api/timesheets");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception e)
        {
            throw e;
        }
    }
}

<div class="mt-24">
    <div class="sm:flex sm:items-center">
        <div class="sm:flex-auto">
            <h1 class="text-xl font-semibold text-gray-900">Collaborators Timesheet</h1>
            <p class="mt-2 text-sm text-gray-700">All for you to review and validate. </p>
        </div>
    </div>
    @if (Timesheets != null && Timesheets.Workers.Any())
    {
        @foreach (var workerData in Timesheets.Workers)
        {
            <WorkerTimesheetsSwimlane WorkerData="workerData" />
        }
    }
    else
    {
        <h4> No Timesheets to review for now. </h4>
    }
</div>


@code {
    private void CheckChanged(ChangeEventArgs eventArgs)
    {
        logger.LogWarning("Someone has clicked me!");
        var t = eventArgs.Value;
    }

    public void Toto()
    {
        logger.LogWarning("Someone has clicked me!");
    }
}
